                                                  ||SCHEDULING Least Completed Next||
======================================================================================================================================================
                                                     Politica di Scheduling in cui:

      1) I processi entrano nel sistema, e vengono schedulati in base al tempo che *manca al loro completamento*
      2) Essendo la politica Preemptive, quando avremo un caso di parità, può succedere che venga prelazionato in favore dell'altro
      3) L'ordine di schedulazione è sempre quello di schedulare il processo che ha *Tserv-CPUb maggiore*      
=====================================================================================================================================================

                                                          DIFFICOLTA' : 3
                                                    
                    Questa politica di Scheduling è facile da applicare, ma presenta alcune difficoltà:
                    
        1) La principale difficoltà sta nel capire che viene schedulato sempre *il processo cui manca più CPUb per essere completato*.
        2) Essendo preemptive, questo calcolo si fa ogni volta che si ha un pareggio di tempo per due o più processi, o quando ne viene completato uno.
        3) Lo scheduling funziona abbastanza bene, fornendo eguali progressi per tutti i processi, anche se rimane comunque la Starvation dei processi lunghi.
        4) La principale pecca di questo algoritmo è che *trascura i processi esistenti* quando entra un nuovo processo,
              dato che il nuovo processo spesso avrà bisogno di più tempo per essere completato, e quindi verrà schedulato subito.
=====================================================================================================================================================

                                   ||SCHEMA||
           P           Tarr          Tserv 
          P1            0              3
          P2            2              3
          P3            3              5
          P4            4              2
          P5            8              3
          
          
In base a questa tabella, abbiamo che:
      
      t = 0ms => Nel sistema e' presente solo P1 => Schedulato
      t = 2ms => Arriva P2 => Viene schedulato
      t = 3ms => Arriva P3 => Viene schedulato
      t = 4ms => Arriva P4 => Viene schedulato
      t = 6ms => Termina P4 => Viene schedulato P2 (P1 ha usato 2ms di CPU, P2 solo 1)
      t = 7ms => Viene schedulato P3
      t = 8ms => Arriva P5 => Viene schedulato
      t = 10ms => Viene schedulato P1 che, a parita' di CPU usata, non viene schedulato da piu' tempo.
      t = 11ms => Termina P1 => Viene schedulato P2
      t = 12ms => Termina P2 => Viene schedulato P3
      t = 13ms => Viene schedulato P5
      t = 14ms => Termina P5 => Viene schedulato P3 fino a completamento (t=16ms)
=====================================FINE======================================      
