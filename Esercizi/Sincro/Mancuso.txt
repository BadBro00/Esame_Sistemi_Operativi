3 - MANCUSO
Il chitarrista Mancuso ha una masterclass in cui possono prendere parte N chitarristi,
che possono scegliere fra M modelli di chitarre, con K chitarre per modello
Quando tutti gli allievi hanno chitarra, inizia masterclass
quelli che non trovano posto,prenderanno parte alla successiva
tutto termina quando non ci sono chitarristi in attesa
--------------------------------------------------------------------------------

VAR:
num_chitarre : const int = K;
num_modelli : const int = M;
max_posti : const int = N;

chitarre : semaforo[M] = {K,...,K};
posti_disp : semaforo = N;
cand_pronti : semaforo = 0;

attesa : int = 0;

inizio : condizione = 0;
mutex : mutex = 1;
CS : mutex = 1;
-------------------------------------

Chitarrista(){
	//Segnalo l'ingresso
	lock(mutex);
	attesa++;
	unlock(mutex);
	while(1){	
		//Se c'e' posto, entra (altrimenti mi blocco e ripartiro' con la signal di un altro cand)
		wait(posti_disp);
		//Scegli chitarra
		scelta := 0;
		while(chitarre[scelta] == 0){
			scelta = scelta + 1modM; //M-sima chitarra -> 0-sima
		}
		//Prendi la chitarra
		wait(chitarre[scelta]);
		//Segnala che sei pronto
		signal(cand_pronti);
		//Aspetta che inizi
		wait(inizio);
		Segui_Masterclass();
		//Riponi la chitarra
		signal(chitarre[selta]);
		//Togliti dall'attesa
		lock(mutex);
		attesa--;
		unlock(mutex);
		//Segnala che c'e' un posto
		signal(posti_disp);
		Esci(); //exit()
	}
}

Mancuso(){
	while(attesa > 0){
		//Controlla se ci sono chitarristi in attesa
		lock(CS);
		if(cand_pronti > 0){
			unlock(CS);
			//Fai entrare i chitarristi
			lock(CS);
			pronti := sem_getvalue(cand_pronti);
			unlock(CS);
			for i=1 to pronti
				wait(cand_pronti);
			//Fai iniziare la Masterclass
			signal_broadcast(inizio);
			Masterclass();
		}
		//Altrimenti, rilascia il mutex e ri-cicla
		unlock(CS);
		if(attesa == 0) Termina();//exit()
	}
}
